name: Build TWRP Recovery

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai
  DEVICE: tb8788p1_64_wifi
  OUTDIR: ${{ github.workspace }}/out

jobs:
  build:
    name: Compile TWRP
    runs-on: ubuntu-22.04

    steps:
      # 1. 检出仓库
      - name: Checkout
        uses: actions/checkout@v4

      # 2. 设置时区
      - name: Set Timezone
        run: sudo timedatectl set-timezone "$TZ"

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y \
            git-core gnupg flex bison build-essential \
            zip curl zlib1g-dev gcc-multilib g++-multilib \
            libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev \
            libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils \
            xsltproc unzip fontconfig lzop ccache imagemagick \
            python3 python3-pip python3-venv wget rsync \
            jq openjdk-11-jdk bc

          # 安装repo工具
          sudo curl https://storage.googleapis.com/git-repo-downloads/repo \
            -o /usr/local/bin/repo
          sudo chmod a+x /usr/local/bin/repo

      # 4. 下载 TWRP 源码
      - name: Sync TWRP Source
        run: |
          mkdir -p ~/android/twrp
          cd ~/android/twrp
          repo init -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git -b twrp-12.1
          repo sync -c -j$(nproc) --no-clone-bundle --no-tags

      # 5. 复制设备树到源码目录
      - name: Copy Device Tree
        run: |
          cd ~/android/twrp
          mkdir -p device/vendor/${DEVICE}
          cp -r $GITHUB_WORKSPACE/* device/vendor/${DEVICE}/

      # 6. 设置环境变量并启动编译
      - name: Build TWRP
        run: |
          cd ~/android/twrp
          source build/envsetup.sh
          lunch omni_${DEVICE}-eng
          mka recoveryimage -j$(nproc)

      # 7. 输出编译结果
      - name: Upload Recovery Image
        uses: actions/upload-artifact@v4
        with:
          name: twrp-recovery
          path: ~/android/twrp/out/target/product/${DEVICE}/recovery.img
